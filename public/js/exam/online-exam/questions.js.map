{"version":3,"file":"js/exam/online-exam/questions.js?id=9abcb630e5fac0283b76","sources":["webpack:///question-form.vue","webpack:///questions.vue","webpack:///./resources/js/views/exam/online-exam/question-form.vue?1de7","webpack:///./resources/js/views/exam/online-exam/questions.vue?0f3b","webpack:///./resources/js/views/exam/online-exam/question-form.vue","webpack:///./resources/js/views/exam/online-exam/question-form.vue?e1f2","webpack:///./resources/js/views/exam/online-exam/question-form.vue?30bb","webpack:///./resources/js/views/exam/online-exam/questions.vue","webpack:///./resources/js/views/exam/online-exam/questions.vue?738b","webpack:///./resources/js/views/exam/online-exam/questions.vue?d6e4"],"sourcesContent":["<template>\n    <div>\n        <form @submit.prevent=\"proceed\" @keydown=\"onlineExamQuestionForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('exam.online_exam_question')}}</label>\n                        <autosize-textarea v-model=\"onlineExamQuestionForm.question\" rows=\"1\" name=\"question\" :placeholder=\"trans('exam.online_exam_question')\"></autosize-textarea>\n                        <show-error :form-name=\"onlineExamQuestionForm\" prop-name=\"question\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n\t\t\t\t\t<upload-image id=\"image\" :button-text=\"trans('general.choose_image')\" upload-path=\"/online-exam/question/image\" remove-path=\"/online-exam/question/image\" :image-source=\"onlineExamQuestionForm.image\" @uploaded=\"onlineExamQuestionForm.image = $event\" @removed=\"onlineExamQuestionForm.image = ''\"></upload-image>\n                </div>\n                <!-- <div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('exam.online_exam_question_type')}}</label>\n                        <select v-model=\"onlineExamQuestionForm.question_type\" class=\"custom-select col-12\" name=\"question_type\"@change=\"onlineExamQuestionForm.errors.clear('question_type')\" :disabled=\"onlineExam.exam_type == 'mcq' ? true : false\">\n                          <option value=\"\" selected>{{trans('general.select_one')}}</option>\n                          <option v-for=\"option in online_exam_question_types\" v-bind:value=\"option.value\">\n                            {{ option.text }}\n                          </option>\n                        </select>\n                        <show-error :form-name=\"onlineExamQuestionForm\" prop-name=\"question_type\"></show-error>\n                    </div>\n                </div> -->\n                <div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('exam.online_exam_mark')}}</label>\n                        <input class=\"form-control\" type=\"number\" v-model=\"onlineExamQuestionForm.mark\" name=\"mark\" :placeholder=\"trans('exam.online_exam_mark')\">\n                        <show-error :form-name=\"onlineExamQuestionForm\" prop-name=\"mark\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12\" v-if=\"onlineExamQuestionForm.question_type == 'mcq'\" >\n\t\t            <div class=\"row\" :key=\"index\" v-for=\"(option,index) in onlineExamQuestionForm.options\">\n\t\t                <div class=\"col-12 col-sm-1\">\n\t\t                    <button type=\"button\" class=\"btn btn-danger btn-sm\" :key=\"index\" v-confirm=\"{ok: confirmDelete(index)}\" v-tooltip=\"trans('general.delete')\"><i class=\"fas fa-trash\"></i></button>\n\t\t                </div>\n\t\t                <div class=\"col-12 col-sm-5\">\n\t\t                    <div class=\"form-group\">\n\t\t                        <autosize-textarea v-model=\"option.title\" rows=\"1\" name=\"getOptionTitle(index)\" :placeholder=\"trans('exam.online_exam_option_number', {attribute: index+1})\"></autosize-textarea>\n\t\t                        <show-error :form-name=\"onlineExamQuestionForm\" :prop-name=\"getOptionTitle(index)\"></show-error>\n\t\t                    </div>\n\t\t                </div>\n\t\t                <div class=\"col-12 col-sm-1\">\n\t\t                    <div class=\"form-group\">\n\t\t                        <label class=\"custom-control custom-checkbox\" v-tooltip=\"trans('exam.online_exam_is_correct_answer')\">\n\t                                <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"option.is_correct_answer\" value=\"1\">\n\t                                <span class=\"custom-control-label\" style=\"font-size: 80%\">&nbsp;</span>\n\t                            </label>\n\t\t                    </div>\n\t\t                </div>\n\t\t                <div class=\"col-12 col-sm-5\">\n\t\t                    <upload-image :id=\"getOptionId(index)\" :button-text=\"trans('general.choose_image')\" upload-path=\"/online-exam/question/image\" remove-path=\"/online-exam/question/image\" :image-source=\"option.image\" @uploaded=\"option.image = $event\" @removed=\"option.image = ''\"></upload-image>\n\t\t                </div>\n\t\t            </div>\n\t\t            <div class=\"row\">\n\t\t            \t<div class=\"col-12\">\n\t\t            \t\t<button type=\"button\" class=\"btn btn-info btn-sm mx-4 m-b-20\" @click=\"addNewOption\">{{trans('exam.add_new_option')}}</button>\n\t\t            \t</div>\n\t\t            </div>\n                </div>\n            </div>\n\n            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                <span v-if=\"id\">{{trans('general.update')}}</span>\n                <span v-else>{{trans('general.save')}}</span>\n            </button>\n        </form>\n    </div>\n</template>\n\n<script>\n\texport default {\n\t\tprops: ['id','onlineExam','question'],\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tonlineExamQuestionForm: new Form({\n\t\t\t\t\tquestion: '',\n\t\t\t\t\timage: '',\n\t\t\t\t\tmark: '',\n\t\t\t\t\tquestion_type: 'mcq',\n\t\t\t\t\toptions: []\n\t\t\t\t}),\n\t\t\t\tonline_exam_question_types: []\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tthis.getPreRequisite();\n\n\t\t\tif (this.onlineExam.exam_type == 'mcq') {\n\t\t\t\tthis.onlineExamQuestionForm.question_type = 'mcq'\n\t\t\t}\n\n\t\t\tif (this.id) {\n\t\t\t\tthis.onlineExamQuestionForm.question = this.question.question;\n\t\t\t\tthis.onlineExamQuestionForm.image = this.question.image;\n\t\t\t\tthis.onlineExamQuestionForm.mark = this.question.mark;\n\t\t\t\tthis.onlineExamQuestionForm.question_type = this.question.question_type;\n\t\t\t\tthis.question.answers.forEach(answer => {\n\t\t\t\t\tthis.onlineExamQuestionForm.options.push({\n\t\t\t\t\t\ttitle: answer.title,\n\t\t\t\t\t\tis_correct_answer: answer.is_correct_answer,\n\t\t\t\t\t\timage: answer.image\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tgetOptionTitle(index) {\n\t\t\t\treturn 'option_title_'+index;\n\t\t\t},\n\t\t\tgetOptionId(index) {\n\t\t\t\treturn 'option_id_'+index;\n\t\t\t},\n\t\t\tgetPreRequisite(){\n\t\t\t\taxios.get('/api/online-exam/pre-requisite')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.online_exam_question_types = response.online_exam_question_types;\n\t\t\t\t\t})\n\t\t\t},\n            addNewOption(){\n                this.onlineExamQuestionForm.options.push({\n                    image: '',\n                    title: '',\n                    is_correct_option: ''\n                });\n            },\n            confirmDelete(index){\n                return dialog => this.deleteOption(index);\n            },\n            deleteOption(index){\n                this.onlineExamQuestionForm.options.splice(index, 1);\n            },\n            proceed() {\n            \tif (!this.id)\n            \t\tthis.submit()\n            \telse\n            \t\tthis.update()\n            },\n            submit() {\n            \tlet loader = this.$loading.show();\n            \tthis.onlineExamQuestionForm.post('/api/online-exam/'+this.onlineExam.uuid+'/question')\n            \t\t.then(response => {\n            \t\t\ttoastr.success(response.message);\n            \t\t\tthis.$emit('completed');\n            \t\t\tloader.hide();\n            \t\t})\n            \t\t.catch(error => {\n            \t\t\tloader.hide();\n            \t\t\thelper.showErrorMsg(error);\n            \t\t})\n            },\n            update() {\n            \tlet loader = this.$loading.show();\n            \tthis.onlineExamQuestionForm.patch('/api/online-exam/'+this.onlineExam.uuid+'/question/'+this.id)\n            \t\t.then(response => {\n            \t\t\ttoastr.success(response.message);\n            \t\t\tthis.$emit('completed');\n            \t\t\tloader.hide();\n            \t\t})\n            \t\t.catch(error => {\n            \t\t\tloader.hide();\n            \t\t\thelper.showErrorMsg(error);\n            \t\t})\n            }\n\t\t}\n\t}\n</script>\t","<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('exam.online_exam')}}\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"online_exam\">{{online_exam.name}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <router-link to=\"/online-exam\" class=\"btn btn-info btn-sm\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('exam.online_exam')}}</span></router-link>\n                        <router-link :to=\"`/online-exam/${online_exam.uuid}/records`\" class=\"btn btn-info btn-sm\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('exam.online_exam_record')}}</span></router-link>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-4\">\n                    <online-exam-detail :onlineExam=\"online_exam\" @updateExam=\"getOnlineExam\"></online-exam-detail>\n                </div>\n                <div class=\"col-12 col-sm-8 p-0\">\n                    <div class=\"card\">\n                        <div class=\"card-boy\">\n                            <h4 class=\"card-title m-3\">{{trans('exam.online_exam_instructions')}}\n                                <div class=\"action-buttons pull-right mr-2\">\n                                    <button class=\"btn btn-info btn-sm\" v-if=\"online_exam.is_editable\" @click=\"addQuestion\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('exam.add_new_question')}}</span></button>\n                                </div>\n                            </h4>\n\n                            <div class=\"border-top\" style=\"font-size: 90%; padding-top: 10px;\" v-html=\"online_exam.instructions\"></div>\n\n                            <hr />\n\n                            <h4 class=\"card-title m-3\">{{trans('exam.online_exam_questions')}}</h4>\n\n                            <div v-for=\"(question,index) in online_exam.questions\" class=\"border-bottom my-2\" style=\"font-size: 90%; margin-right: 20px; padding: 10px; background-color: rgb(241, 243, 244); border-radius: 5px; color: #000;\">\n                               <p>\n                                    ({{index+1}}) {{question.question}} \n                                    <span class=\"pull-right\">({{question.mark}})</span>\n                                </p>\n                               <div v-if=\"question.image\" style=\"padding: 10px;\"><center><img style=\"max-width: 250px;\" :src=\"'/'+question.image\" /></center></div>\n\n                               <div class=\"row\" v-if=\"question.question_type == 'mcq'\" style=\"padding-left: 20px;\">\n                                    <div class=\"col-6\" v-for=\"(option, idx) in question.answers\">\n                                        <p>\n                                            ({{idx+1}}) {{option.title}}\n                                            <i v-if=\"option.is_correct_answer\" class=\"fas fa-check-circle text-success\"></i>\n                                            <div v-if=\"option.image\" style=\"padding: 10px;\"><center><img style=\"max-width: 150px;\" :src=\"'/'+option.image\" /></center></div>\n                                        </p>\n                                    </div>\n                               </div>\n\n                               <div class=\"pull-right\" v-if=\"online_exam.is_editable\">\n                                   <button type=\"button\" @click=\"editQuestion(question)\" class=\"btn btn-sm btn-info m-r-5\"><i class=\"fas fa-edit\"></i></button>\n                                   <button type=\"button\" :key=\"question.id\" v-confirm=\"{ok: confirmDelete(question)}\" class=\"btn btn-sm btn-danger\"><i class=\"fas fa-times\"></i></button>\n                               </div>\n                               <div class=\"clearfix\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <transition name=\"modal\" v-if=\"hasPermission('edit-online-exam') && showQuestionModal\">\n            <div class=\"modal-mask\">\n                <div class=\"modal-wrapper\">\n                    <div class=\"modal-container modal-lg\">\n                        <div class=\"modal-header\">\n                            <slot name=\"header\">\n                                {{trans('exam.add_new_question')}}\n                                <span class=\"float-right pointer\" @click=\"showQuestionModal = false\">x</span>\n                            </slot>\n                        </div>\n                        <div class=\"modal-body\">\n                            <slot name=\"body\">\n                                <question-form :id=\"question.id\" :question=\"question\" :onlineExam=\"online_exam\" @completed=\"getOnlineExam\" @cancel=\"showQuestionModal = !showQuestionModal\"></question-form>\n                            </slot>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\n    import onlineExamDetail from './detail'\n    import questionForm from './question-form'\n\n    export default {\n        components : { onlineExamDetail,questionForm },\n        data() {\n            return {\n                uuid:this.$route.params.uuid,\n                online_exam: {\n                    batch: {\n                        course: {}\n                    },\n                    subject: {},\n                    records: [],\n                    questions: []\n                },\n                question: {},\n                showQuestionModal: false\n            }\n        },\n        mounted(){\n            if(!helper.hasPermission('edit-online-exam')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getOnlineExam();\n        },\n        methods: {\n            hasPermission(permission) {\n                return helper.hasPermission(permission);\n            },\n            getOnlineExam(){\n                this.showQuestionModal = false;\n                let loader = this.$loading.show();\n                axios.get('/api/online-exam/'+this.uuid)\n                    .then(response => {\n                        this.online_exam = response.online_exam;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/dashboard');\n                    })\n            },\n            addQuestion(){\n                this.question = {}\n                this.showQuestionModal = true;\n            },\n            editQuestion(question) {\n                this.question = question;\n                this.showQuestionModal = true;\n            },\n            confirmDelete(question){\n                return dialog => this.deleteQuestion(question);\n            },\n            deleteQuestion(question){\n                let loader = this.$loading.show();\n                axios.delete('/api/online-exam/'+this.uuid+'/question/'+question.id)\n                    .then(response => {\n                        this.getOnlineExam();\n                        toastr.success(response.message);\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentTime(time) {\n            return helper.formatTime(time);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n    }\n</script>","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function($event) {\n            $event.preventDefault()\n            return _vm.proceed($event)\n          },\n          keydown: function($event) {\n            return _vm.onlineExamQuestionForm.errors.clear($event.target.name)\n          }\n        }\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"exam.online_exam_question\")))\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"1\",\n                    name: \"question\",\n                    placeholder: _vm.trans(\"exam.online_exam_question\")\n                  },\n                  model: {\n                    value: _vm.onlineExamQuestionForm.question,\n                    callback: function($$v) {\n                      _vm.$set(_vm.onlineExamQuestionForm, \"question\", $$v)\n                    },\n                    expression: \"onlineExamQuestionForm.question\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.onlineExamQuestionForm,\n                    \"prop-name\": \"question\"\n                  }\n                })\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"col-12\" },\n            [\n              _c(\"upload-image\", {\n                attrs: {\n                  id: \"image\",\n                  \"button-text\": _vm.trans(\"general.choose_image\"),\n                  \"upload-path\": \"/online-exam/question/image\",\n                  \"remove-path\": \"/online-exam/question/image\",\n                  \"image-source\": _vm.onlineExamQuestionForm.image\n                },\n                on: {\n                  uploaded: function($event) {\n                    _vm.onlineExamQuestionForm.image = $event\n                  },\n                  removed: function($event) {\n                    _vm.onlineExamQuestionForm.image = \"\"\n                  }\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"exam.online_exam_mark\")))\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.onlineExamQuestionForm.mark,\n                      expression: \"onlineExamQuestionForm.mark\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"number\",\n                    name: \"mark\",\n                    placeholder: _vm.trans(\"exam.online_exam_mark\")\n                  },\n                  domProps: { value: _vm.onlineExamQuestionForm.mark },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(\n                        _vm.onlineExamQuestionForm,\n                        \"mark\",\n                        $event.target.value\n                      )\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.onlineExamQuestionForm,\n                    \"prop-name\": \"mark\"\n                  }\n                })\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _vm.onlineExamQuestionForm.question_type == \"mcq\"\n            ? _c(\n                \"div\",\n                { staticClass: \"col-12\" },\n                [\n                  _vm._l(_vm.onlineExamQuestionForm.options, function(\n                    option,\n                    index\n                  ) {\n                    return _c(\"div\", { key: index, staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-1\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"confirm\",\n                                rawName: \"v-confirm\",\n                                value: { ok: _vm.confirmDelete(index) },\n                                expression: \"{ok: confirmDelete(index)}\"\n                              },\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.trans(\"general.delete\"),\n                                expression: \"trans('general.delete')\"\n                              }\n                            ],\n                            key: index,\n                            staticClass: \"btn btn-danger btn-sm\",\n                            attrs: { type: \"button\" }\n                          },\n                          [_c(\"i\", { staticClass: \"fas fa-trash\" })]\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-5\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"autosize-textarea\", {\n                              attrs: {\n                                rows: \"1\",\n                                name: \"getOptionTitle(index)\",\n                                placeholder: _vm.trans(\n                                  \"exam.online_exam_option_number\",\n                                  { attribute: index + 1 }\n                                )\n                              },\n                              model: {\n                                value: option.title,\n                                callback: function($$v) {\n                                  _vm.$set(option, \"title\", $$v)\n                                },\n                                expression: \"option.title\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"show-error\", {\n                              attrs: {\n                                \"form-name\": _vm.onlineExamQuestionForm,\n                                \"prop-name\": _vm.getOptionTitle(index)\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-1\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\n                            \"label\",\n                            {\n                              directives: [\n                                {\n                                  name: \"tooltip\",\n                                  rawName: \"v-tooltip\",\n                                  value: _vm.trans(\n                                    \"exam.online_exam_is_correct_answer\"\n                                  ),\n                                  expression:\n                                    \"trans('exam.online_exam_is_correct_answer')\"\n                                }\n                              ],\n                              staticClass: \"custom-control custom-checkbox\"\n                            },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: option.is_correct_answer,\n                                    expression: \"option.is_correct_answer\"\n                                  }\n                                ],\n                                staticClass: \"custom-control-input\",\n                                attrs: { type: \"checkbox\", value: \"1\" },\n                                domProps: {\n                                  checked: Array.isArray(\n                                    option.is_correct_answer\n                                  )\n                                    ? _vm._i(option.is_correct_answer, \"1\") > -1\n                                    : option.is_correct_answer\n                                },\n                                on: {\n                                  change: function($event) {\n                                    var $$a = option.is_correct_answer,\n                                      $$el = $event.target,\n                                      $$c = $$el.checked ? true : false\n                                    if (Array.isArray($$a)) {\n                                      var $$v = \"1\",\n                                        $$i = _vm._i($$a, $$v)\n                                      if ($$el.checked) {\n                                        $$i < 0 &&\n                                          _vm.$set(\n                                            option,\n                                            \"is_correct_answer\",\n                                            $$a.concat([$$v])\n                                          )\n                                      } else {\n                                        $$i > -1 &&\n                                          _vm.$set(\n                                            option,\n                                            \"is_correct_answer\",\n                                            $$a\n                                              .slice(0, $$i)\n                                              .concat($$a.slice($$i + 1))\n                                          )\n                                      }\n                                    } else {\n                                      _vm.$set(option, \"is_correct_answer\", $$c)\n                                    }\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"custom-control-label\",\n                                  staticStyle: { \"font-size\": \"80%\" }\n                                },\n                                [_vm._v(\" \")]\n                              )\n                            ]\n                          )\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-5\" },\n                        [\n                          _c(\"upload-image\", {\n                            attrs: {\n                              id: _vm.getOptionId(index),\n                              \"button-text\": _vm.trans(\"general.choose_image\"),\n                              \"upload-path\": \"/online-exam/question/image\",\n                              \"remove-path\": \"/online-exam/question/image\",\n                              \"image-source\": option.image\n                            },\n                            on: {\n                              uploaded: function($event) {\n                                option.image = $event\n                              },\n                              removed: function($event) {\n                                option.image = \"\"\n                              }\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-12\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info btn-sm mx-4 m-b-20\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.addNewOption }\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"exam.add_new_option\")))]\n                      )\n                    ])\n                  ])\n                ],\n                2\n              )\n            : _vm._e()\n        ]),\n        _vm._v(\" \"),\n        !_vm.id\n          ? _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-danger waves-effect waves-light \",\n                attrs: { type: \"button\" },\n                on: {\n                  click: function($event) {\n                    return _vm.$emit(\"cancel\")\n                  }\n                }\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn btn-info waves-effect waves-light\",\n            attrs: { type: \"submit\" }\n          },\n          [\n            _vm.id\n              ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n              : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))])\n          ]\n        )\n      ]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"exam.online_exam\")) + \"\\n                    \"\n              ),\n              _vm.online_exam\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.online_exam.name))]\n                  )\n                : _vm._e()\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _c(\n                  \"router-link\",\n                  {\n                    staticClass: \"btn btn-info btn-sm\",\n                    attrs: { to: \"/online-exam\" }\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-list\" }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"exam.online_exam\")))\n                    ])\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"router-link\",\n                  {\n                    staticClass: \"btn btn-info btn-sm\",\n                    attrs: {\n                      to: \"/online-exam/\" + _vm.online_exam.uuid + \"/records\"\n                    }\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-list\" }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"exam.online_exam_record\")))\n                    ])\n                  ]\n                )\n              ],\n              1\n            )\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"container-fluid\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"col-12 col-sm-4\" },\n            [\n              _c(\"online-exam-detail\", {\n                attrs: { onlineExam: _vm.online_exam },\n                on: { updateExam: _vm.getOnlineExam }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-8 p-0\" }, [\n            _c(\"div\", { staticClass: \"card\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"card-boy\" },\n                [\n                  _c(\"h4\", { staticClass: \"card-title m-3\" }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"exam.online_exam_instructions\")) +\n                        \"\\n                            \"\n                    ),\n                    _c(\n                      \"div\",\n                      { staticClass: \"action-buttons pull-right mr-2\" },\n                      [\n                        _vm.online_exam.is_editable\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn btn-info btn-sm\",\n                                on: { click: _vm.addQuestion }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"span\",\n                                  { staticClass: \"d-none d-sm-inline\" },\n                                  [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"exam.add_new_question\"))\n                                    )\n                                  ]\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ]\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", {\n                    staticClass: \"border-top\",\n                    staticStyle: { \"font-size\": \"90%\", \"padding-top\": \"10px\" },\n                    domProps: {\n                      innerHTML: _vm._s(_vm.online_exam.instructions)\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"hr\"),\n                  _vm._v(\" \"),\n                  _c(\"h4\", { staticClass: \"card-title m-3\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"exam.online_exam_questions\")))\n                  ]),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.online_exam.questions, function(question, index) {\n                    return _c(\n                      \"div\",\n                      {\n                        staticClass: \"border-bottom my-2\",\n                        staticStyle: {\n                          \"font-size\": \"90%\",\n                          \"margin-right\": \"20px\",\n                          padding: \"10px\",\n                          \"background-color\": \"rgb(241, 243, 244)\",\n                          \"border-radius\": \"5px\",\n                          color: \"#000\"\n                        }\n                      },\n                      [\n                        _c(\"p\", [\n                          _vm._v(\n                            \"\\n                                (\" +\n                              _vm._s(index + 1) +\n                              \") \" +\n                              _vm._s(question.question) +\n                              \" \\n                                \"\n                          ),\n                          _c(\"span\", { staticClass: \"pull-right\" }, [\n                            _vm._v(\"(\" + _vm._s(question.mark) + \")\")\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        question.image\n                          ? _c(\n                              \"div\",\n                              { staticStyle: { padding: \"10px\" } },\n                              [\n                                _c(\"center\", [\n                                  _c(\"img\", {\n                                    staticStyle: { \"max-width\": \"250px\" },\n                                    attrs: { src: \"/\" + question.image }\n                                  })\n                                ])\n                              ],\n                              1\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        question.question_type == \"mcq\"\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"row\",\n                                staticStyle: { \"padding-left\": \"20px\" }\n                              },\n                              _vm._l(question.answers, function(option, idx) {\n                                return _c(\"div\", { staticClass: \"col-6\" }, [\n                                  _c(\"p\", [\n                                    _vm._v(\n                                      \"\\n                                        (\" +\n                                        _vm._s(idx + 1) +\n                                        \") \" +\n                                        _vm._s(option.title) +\n                                        \"\\n                                        \"\n                                    ),\n                                    option.is_correct_answer\n                                      ? _c(\"i\", {\n                                          staticClass:\n                                            \"fas fa-check-circle text-success\"\n                                        })\n                                      : _vm._e()\n                                  ]),\n                                  option.image\n                                    ? _c(\n                                        \"div\",\n                                        { staticStyle: { padding: \"10px\" } },\n                                        [\n                                          _c(\"center\", [\n                                            _c(\"img\", {\n                                              staticStyle: {\n                                                \"max-width\": \"150px\"\n                                              },\n                                              attrs: { src: \"/\" + option.image }\n                                            })\n                                          ])\n                                        ],\n                                        1\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _c(\"p\")\n                                ])\n                              }),\n                              0\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.online_exam.is_editable\n                          ? _c(\"div\", { staticClass: \"pull-right\" }, [\n                              _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-sm btn-info m-r-5\",\n                                  attrs: { type: \"button\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.editQuestion(question)\n                                    }\n                                  }\n                                },\n                                [_c(\"i\", { staticClass: \"fas fa-edit\" })]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"button\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"confirm\",\n                                      rawName: \"v-confirm\",\n                                      value: {\n                                        ok: _vm.confirmDelete(question)\n                                      },\n                                      expression:\n                                        \"{ok: confirmDelete(question)}\"\n                                    }\n                                  ],\n                                  key: question.id,\n                                  staticClass: \"btn btn-sm btn-danger\",\n                                  attrs: { type: \"button\" }\n                                },\n                                [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                              )\n                            ])\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"clearfix\" })\n                      ]\n                    )\n                  })\n                ],\n                2\n              )\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm.hasPermission(\"edit-online-exam\") && _vm.showQuestionModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.trans(\"exam.add_new_question\")) +\n                            \"\\n                            \"\n                        ),\n                        _c(\n                          \"span\",\n                          {\n                            staticClass: \"float-right pointer\",\n                            on: {\n                              click: function($event) {\n                                _vm.showQuestionModal = false\n                              }\n                            }\n                          },\n                          [_vm._v(\"x\")]\n                        )\n                      ])\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", [\n                        _c(\"question-form\", {\n                          attrs: {\n                            id: _vm.question.id,\n                            question: _vm.question,\n                            onlineExam: _vm.online_exam\n                          },\n                          on: {\n                            completed: _vm.getOnlineExam,\n                            cancel: function($event) {\n                              _vm.showQuestionModal = !_vm.showQuestionModal\n                            }\n                          }\n                        })\n                      ])\n                    ],\n                    2\n                  )\n                ])\n              ])\n            ])\n          ])\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./question-form.vue?vue&type=template&id=51c44664&\"\nimport script from \"./question-form.vue?vue&type=script&lang=js&\"\nexport * from \"./question-form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/udayrajsiwakoti/Documents/laravel-projects/instikit/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('51c44664')) {\n      api.createRecord('51c44664', component.options)\n    } else {\n      api.reload('51c44664', component.options)\n    }\n    module.hot.accept(\"./question-form.vue?vue&type=template&id=51c44664&\", function () {\n      api.rerender('51c44664', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/exam/online-exam/question-form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./question-form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./question-form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./question-form.vue?vue&type=template&id=51c44664&\"","import { render, staticRenderFns } from \"./questions.vue?vue&type=template&id=c0ef2634&\"\nimport script from \"./questions.vue?vue&type=script&lang=js&\"\nexport * from \"./questions.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/udayrajsiwakoti/Documents/laravel-projects/instikit/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('c0ef2634')) {\n      api.createRecord('c0ef2634', component.options)\n    } else {\n      api.reload('c0ef2634', component.options)\n    }\n    module.hot.accept(\"./questions.vue?vue&type=template&id=c0ef2634&\", function () {\n      api.rerender('c0ef2634', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/exam/online-exam/questions.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./questions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./questions.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./questions.vue?vue&type=template&id=c0ef2634&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AARA;AAUA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAzDA;AAnCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACeA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAQA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAzCA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AApzVA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}